
// Create Sylvina Liquid Universe -- Top 2000 liquid names each yeaar
CREATE OR REPLACE TABLE SYLVINA.DBO.LIQUID_RANK AS
(
WITH BASEQ AS
(
SELECT  
    DS.ID,
    YEAR(DS.MARKETDATE) AS MYEAR,
    MEDIAN(DS.CLOSE_*DS.VOLUME) AS LIQUID_MEDIAN,
    SUM(DS.CLOSE_*DS.VOLUME) AS LIQUID_SUM
FROM SYLVINA.DBO.VW_DS2PRICING DS
WHERE
DS.ADJTYPE=1 AND
DS.ISPRIMEXCHQT='Y' AND
DS.MARKETDATE BETWEEN DATE('1972-01-01') AND DATE('2023-12-31')
GROUP BY DS.ID, MYEAR
HAVING LIQUID_MEDIAN IS NOT NULL 
ORDER BY MYEAR, LIQUID_MEDIAN, LIQUID_SUM DESC
)
SELECT X.ID,
       Y.NAME,
       Y.COUNTRY,
       X.MYEAR,
       ROW_NUMBER() OVER (PARTITION BY X.MYEAR ORDER BY X.LIQUID_MEDIAN DESC) AS LIQUID_RANK,
       CAST((X.LIQUID_SUM/1000000) AS NUMBER(38,0)) AS LIQUID_SUM
 FROM BASEQ X 
 JOIN SECMSTRX Y ON X.ID = Y.ID 
 QUALIFY LIQUID_RANK < 2000
);


// Create Universe Ticker List
// Tradable Universe -- Top 1000 tickers 
CREATE OR REPLACE TABLE SYLVINA.DBO.UNIVERSE 
AS 
SELECT ID FROM SYLVINA.dbo.liquid_rank 
WHERE LIQUID_RANK < 1500
QUALIFY ROW_NUMBER() OVER (PARTITION BY ID ORDER BY MYEAR ASC) = 2;

SELECT COUNT(DISTINCT(ID)) FROM SYLVINA.DBO.LIQUID_RANK;

// Map in OrgPermID
CREATE OR REPLACE TABLE SYLVINA.DBO.UNIVERSE_BASE AS
WITH
SECTOORG AS (
	SELECT
		DISTINCT(M.ID),
		M.SECCODE,
		M.NAME, 
		COALESCE(
		FIRST_VALUE(QQ.ORGPERMID) OVER (PARTITION BY M.SECCODE ORDER BY QQ.ISPRIMARY DESC, QQ.RANK ASC),
		FIRST_VALUE(II.ORGPERMID) OVER (PARTITION BY M.SECCODE ORDER BY II.ISPRIMARY DESC, II.RANK ASC) 
		) AS ORGPERMID
		//  COALESCE(QQ.ORGPERMID,II.ORGPERMID) AS ORGPERMID
	FROM SECMSTRX M
	LEFT JOIN (
		SELECT I.ORGPERMID,Q.ISPRIMARY,P.SECCODE, P.RANK
		FROM PERMSECMAPX P
		JOIN PERMQUOTEREF Q
			ON  Q.QUOTEPERMID = P.ENTPERMID
			AND P.ENTTYPE = 55
		JOIN PERMINSTRREF I
			ON  I.INSTRPERMID = Q.INSTRPERMID
		--WHERE P.REGCODE=1
			--AND   Q.ISPRIMARY = 1
		ORDER BY Q.ISPRIMARY DESC,I.ISPRIMARY DESC,I.ORGPERMID,P.RANK ASC -- PRIORITIZE ORGPERMID FOR THE PRIMARY QUOTE, THEN MAPPING RANK (WHICH IS BASED ON SEDOL START DATES)
	) QQ ON QQ.SECCODE = M.SECCODE 
	LEFT  JOIN (
		SELECT I.ORGPERMID,I.ISPRIMARY, P.SECCODE, P.RANK
		FROM PERMSECMAPX P
		JOIN PERMINSTRREF I
			ON  I.INSTRPERMID = P.ENTPERMID
			AND P.ENTTYPE = 49
			--AND   I.ISPRIMARY = 1
		--WHERE   P.REGCODE=1
		ORDER BY I.ISPRIMARY DESC,I.ORGPERMID,P.RANK ASC  -- PRIORITIZE ORGPERMID FOR THE PRIMARY INSTRUMENT, THEN MAPPING RANK (WHICH IS BASED ON CUSIP START DATES)
	) II  ON II.SECCODE = M.SECCODE 

	WHERE M.TYPE_ =1
)
SELECT X.*
 FROM SECTOORG X 
RIGHT JOIN SYLVINA.DBO.UNIVERSE UI ON X.ID = UI.ID
WHERE X.ORGPERMID IS NOT NULL;


// Map In Inst / Quote PermID  & RIC
CREATE OR REPLACE TABLE SYLVINA.DBO.UNIVERSE_INFO AS 
SELECT U.ID,
        U.NAME,
        U.SECCODE,
        U.ORGPERMID,
 --       PSM.RANK,
 ---       PSM.STARTDATE,
 --       PSM.ENDDATE,
          PRD.RIC,
   --       PRD.STARTDATE,
      --     PRD.ENDDATE,
           PQR.ISPRIMARY,
           PQR.QUOTEPERMID,
           PQR.INSTRPERMID,
           PQR.TICKER,
           PQR.STATUS,
 --          PQR.TYPECODE,
           PQR.EXCHCODE,
           PQR.COMNAME
FROM SYLVINA.DBO.UNIVERSE_BASE U
JOIN PERMSECMAPX PSM ON PSM.SECCODE = U.SECCODE AND PSM.REGCODE=1 AND PSM.ENTTYPE=55
JOIN PERMRICDATA PRD ON PRD.QUOTEPERMID = PSM.ENTPERMID
JOIN PERMQUOTEREF PQR ON PQR.QUOTEPERMID = PSM.ENTPERMID
WHERE U.ID IN (SELECT ID FROM SYLVINA.DBO.UNIVERSE_BASE)
--JOIN QAI.DBO.PERMRICDATA R ON R.QUOTEPERMID = I.PRITRDQUOTEPERMID
QUALIFY ROW_NUMBER() OVER (PARTITION BY U.ID ORDER BY PQR.ISPRIMARY DESC, PSM.RANK ASC NULLS LAST)=1;

SELECT COUNT(*) FROM SYLVINA.DBO.UNIVERSE_INFO
;

-- Create meta pricing table
-- Main view to aggregate north american pricing data
CREATE OR REPLACE VIEW SYLVINA.DBO.VW_DS2PRICING AS
	WITH
	ADJFACTOR AS (
		SELECT 
			INFOCODE,
			ADJTYPE,
			ADJDATE,
			COALESCE(ENDADJDATE,'3000-01-01') AS ENDADJDATE,
			CUMADJFACTOR
		FROM QAI.DBO.DS2ADJ
		UNION ALL
		SELECT
			INFOCODE,
			0 AS ADJTYPE,
			MIN(ADJDATE) AS ADJDATE,
			'3000-01-01' AS ENDADJDATE,
			1 AS CUMADJFACTOR
		FROM QAI.DBO.DS2ADJ 
		GROUP BY INFOCODE
	),

	ALLEXCHPRICING AS (
		SELECT * , TRUE AS PRIMEXCH FROM QAI.DBO.DS2PRIMQTPRC -- UNION ALL SELECT *, 'N' AS PRIMEXCH FROM QAI.DBO.DS2SCDQTPRC
	)

	SELECT 
		SMX.ID,
		D.MARKETDATE,
 
		--CASE
		--	WHEN X.ALTDSCODE IS NOT NULL THEN X.ALTDSCODE ELSE I.DSCODE
		--END AS DSCODE,

		CASE WHEN X.PRICEUNIT = 'E-02' THEN (D.OPEN_*A.CUMADJFACTOR)/100 
				ELSE D.OPEN_*A.CUMADJFACTOR END AS OPEN_,
		CASE WHEN X.PRICEUNIT = 'E-02' THEN (D.HIGH*A.CUMADJFACTOR)/100 
			ELSE D.HIGH*A.CUMADJFACTOR END AS HIGH,
		CASE WHEN X.PRICEUNIT = 'E-02' THEN (D.LOW*A.CUMADJFACTOR)/100 
			ELSE D.LOW*A.CUMADJFACTOR END AS LOW,
		CASE WHEN X.PRICEUNIT = 'E-02' THEN (D.CLOSE_*A.CUMADJFACTOR)/100 
			ELSE D.CLOSE_*A.CUMADJFACTOR END AS CLOSE_ADJ,
		--CASE WHEN X.PRICEUNIT = 'E-02' THEN (D.BID*A.CUMADJFACTOR)/100 
		--	ELSE D.BID*A.CUMADJFACTOR END AS BID,
		--CASE WHEN X.PRICEUNIT = 'E-02' THEN (D.ASK*A.CUMADJFACTOR)/100 
		--	ELSE D.ASK*A.CUMADJFACTOR END AS ASK,
		CASE WHEN X.PRICEUNIT = 'E-02' THEN (D.VWAP*A.CUMADJFACTOR)/100 
		    ELSE D.VWAP*A.CUMADJFACTOR END AS VWAP_ADJ,
        COALESCE(VWAP_ADJ,CLOSE_ADJ) AS CALC_PRICE,
        (D.VOLUME/A.CUMADJFACTOR) AS VOLUME_ADJ,
   --     (NS.NUMSHRS*1000)/A.CUMADJFACTOR AS NSHARES_ADJ,
        FIRST_VALUE(CALC_PRICE) OVER (PARTITION BY SMX.ID, RANK, PRIMEXCH, A.ADJTYPE ORDER BY MARKETDATE ASC  ROWS BETWEEN 1 PRECEDING AND 0 PRECEDING) AS PREV_CLOSE,
        ( (CALC_PRICE - PREV_CLOSE )/ PREV_CLOSE ) AS PCT_CHANGE,
        ( CALC_PRICE * VOLUME ) AS GROSS_FLOW,
        (  (CALC_PRICE - PREV_CLOSE ) * VOLUME ) AS NET_FLOW,
  --      ( PCT_CHANGE * ( VOLUME_ADJ / NSHARES_ADJ ))  AS NET_FLOW_NORMALIZED,
        --PERCENT_RANK() OVER (PARTITION BY PRIMEXCH, A.ADJTYPE, D.MARKETDATE ORDER BY PCT_CHANGE ASC) AS DAILY_MOVER_RANK,
        --PERCENT_RANK() OVER (PARTITION BY PRIMEXCH, A.ADJTYPE, D.MARKETDATE ORDER BY DOLLAR_FLOW ASC) AS DAILY_FLOW_RANK,

		--D.CONSOLVOL/A.CUMADJFACTOR AS CONSOLVOL,
		D.ISOCURRCODE AS CURRENCY,
        D.EXCHINTCODE,
--		D.PRIMEXCH AS ISPRIMEXCHQT,
--		M.EXCHNAME,
		A.ADJTYPE,
		A.CUMADJFACTOR,
		X.PRICEUNIT AS PRICEUNITADJUSTMENT,
        SMX.SECCODE,
		D.INFOCODE
        -- SX.RANK
        
	FROM ALLEXCHPRICING D
		JOIN ADJFACTOR A
			ON	A.INFOCODE = D.INFOCODE
			AND	D.MARKETDATE BETWEEN A.ADJDATE AND A.ENDADJDATE
		JOIN QAI.DBO.DS2EXCHQTINFO X
			ON	X.INFOCODE = D.INFOCODE
			AND	X.EXCHINTCODE = D.EXCHINTCODE
		JOIN QAI.DBO.DS2EXCHANGE M
			ON	M.EXCHINTCODE = X.EXCHINTCODE
		JOIN QAI.DBO.DS2CTRYQTINFO I
			ON	I.INFOCODE = D.INFOCODE
		JOIN QAI.DBO.SECMAPX SX
			ON SX.VENTYPE = 33 and SX.VENCODE = I.INFOCODE 
        --JOIN QAI.DBO.DS2NUMSHARES NS 
         --   ON NS.INFOCODE = I.INFOCODE AND NS.EVENTDATE <= D.MARKETDATE
            -- (SELECT MAX(X_.EVENTDATE) FROM QAI.DBO.DS2NUMSHARES X_ WHERE 
            --      X_.INFOCODE = I.INFOCODE AND X_.EVENTDATE <= D.MARKETDATE)
		JOIN QAI.DBO.SECMSTRX SMX 
			ON SMX.SECCODE = SX.SECCODE and SMX.TYPE_ =1 AND D.MARKETDATE BETWEEN 
                            IFNULL(SX.STARTDATE,DATE('1970-01-01'))
                            AND IFNULL(SX.ENDDATE,DATE('3000-01-01'))
            QUALIFY ROW_NUMBER() OVER (PARTITION BY SMX.ID, D.MARKETDATE, /* ISPRIMEXCHQT,*/ ADJTYPE ORDER BY RANK ASC /* , NS.EVENTDATE DESC */ ) = 1;

    ;


-- Test Table
SELECT * FROM SYLVINA.DBO.UNIVERSE_INFO WHERE ID='NVDA';
SELECT * FROM SYLVINA.DBO.VW_DS2PRICING WHERE ID='MSFT' AND ADJTYPE=2 AND MARKETDATE > '2023-01-01' ORDER BY MARKETDATE DESC; -- AND ISPRIMEXCHQT=TRUE AND ADJTYPE=2;

ALTER WAREHOUSE FASTERWH SET warehouse_size=SMALL;
USE WAREHOUSE FASTERWH;

CREATE OR REPLACE TABLE SYLVINA.DBO.PRICING AS 
SELECT * 
FROM SYLVINA.DBO.VW_DS2PRICING P
WHERE  
P.ID IN (SELECT DISTINCT(ID) FROM SYLVINA.DBO.UNIVERSE_INFO) AND
P.ADJTYPE=2;
--ORDER BY P.ID, P.MARKETDATE ASC;
-- AND


--P.MARKETDATE > DATE('2023-01-01');
CREATE OR REPLACE TABLE SYLVINA.DBO.PRICING_RANKED AS 
WITH BASEQ AS 
(
SELECT 
    P.ID,
    P.MARKETDATE,
    P.OPEN_,
    P.HIGH,
    P.LOW,
    P.CLOSE_ADJ,
    P.VWAP_ADJ,
    P.CALC_PRICE,
    P.PREV_CLOSE,
    P.PCT_CHANGE,
    P.VOLUME_ADJ,
    P.GROSS_FLOW,
    P.NET_FLOW,
    ((1000*N.NUMSHRS) / P.CUMADJFACTOR) AS NUM_SHARES,
    ( PCT_CHANGE * ( VOLUME_ADJ / NUM_SHARES ))  AS NET_FLOW_NORM,
    (P.CALC_PRICE * NUM_SHARES ) AS MARKET_CAP
FROM SYLVINA.DBO.PRICING P
JOIN QAI.DBO.DS2NUMSHARES N ON N.INFOCODE = P.INFOCODE AND N.EVENTDATE <= P.MARKETDATE
QUALIFY ROW_NUMBER() OVER (PARTITION BY P.ID, P.MARKETDATE ORDER BY N.EVENTDATE DESC) = 1
)
SELECT 
    P.*,
    PERCENT_RANK() OVER (PARTITION BY P.MARKETDATE ORDER BY PCT_CHANGE NULLS FIRST) AS PCT_CHANGE_RANK,
    PERCENT_RANK() OVER (PARTITION BY P.MARKETDATE ORDER BY GROSS_FLOW NULLS FIRST) AS GROSS_FLOW_RANK,
    PERCENT_RANK() OVER (PARTITION BY P.MARKETDATE ORDER BY NET_FLOW NULLS FIRST) AS NET_FLOW_RANK,
    PERCENT_RANK() OVER (PARTITION BY P.MARKETDATE ORDER BY NET_FLOW_NORM NULLS FIRST) AS NET_FLOW_NORM_RANK,
    PERCENT_RANK() OVER (PARTITION BY P.MARKETDATE ORDER BY MARKET_CAP NULLS FIRST) AS MARKET_CAP_RANK,
    COUNT(ID) OVER (PARTITION BY P.MARKETDATE) AS UNIVERSE_SIZE
FROM BASEQ P;



-- CREATE META VIEW

SELECT * FROM SYLVINA.DBO.PRICING_RANKED WHERE ID='MSFT';


-- Creates coverage summary for Sylvina universe 
CREATE OR REPLACE TABLE SYLVINA.DBO.UNIVERSE_STATS AS
(
WITH BASEQ AS (
SELECT 
    DISTINCT(P.ID),
    UI.RIC,
    UI.NAME,
    MIN(P.MARKETDATE) OVER (PARTITION BY P.ID) as START_DATE,
    MAX(P.MARKETDATE) OVER (PARTITION BY P.ID) as END_DATE,
    COUNT(P.CALC_PRICE) OVER (PARTITION BY P.ID) as VALUE_COUNT,
    MEDIAN(P.GROSS_FLOW_RANK) OVER (PARTITION BY P.ID) as MED_GFLOW_RANK,
    MEDIAN(P.MARKET_CAP_RANK) OVER (PARTITION BY P.ID) as MED_MCAP_RANK
FROM SYLVINA.DBO.PRICING_RANKED P 
JOIN SYLVINA.DBO.UNIVERSE_INFO UI ON P.ID = UI.ID
--(SELECT DISTINCT(ID), NAME FROM SYLVINA.DBO.UNIVERSE_INFO) UI ON  UI.ID = P.ID
--WHERE P.ADJTYPE =2 AND P.ISPRIMEXCHQT='Y'
)
SELECT Q.*,
        (SELECT COUNT(*) FROM SYLVINA.DBO.NYSE_DATES D_ WHERE D_.MARKETDATE BETWEEN START_DATE AND END_DATE) AS NYSE_DAYS,
        (VALUE_COUNT / NYSE_DAYS) AS DENSITY
 FROM BASEQ Q 
--WHERE  ID IN (SELECT DISTINCT(ID) FROM SYLVINA.DBO.UNIVERSE_INFO)
);

SELECT * FROM SYLVINA.DBO.UNIVERSE_STATS;
SELECT COUNT(*) FROM SYLVINA.DBO.UNIVERSE_INFO;
// VIEW SYLVINA DATA VIEW


SELECT * FROM SYLVINA.DBO.PRICING_RANKED
WHERE MARKETDATE = '2006-04-06'
ORDER BY MARKET_CAP_RANK DESC  ;

CREATE OR REPLACE TABLE SYLVINA.DBO.MONTHLY_METRICS AS
SELECT 
    DISTINCT(P.ID),
    I.NAME,
    YEAR(P.MARKETDATE) AS YEAR_,
    MONTH(P.MARKETDATE) AS MONTH_,
    MEDIAN ( P.CALC_PRICE ) OVER (PARTITION BY P.ID, YEAR_,MONTH_) AS M_PRICE,

    MEDIAN( P.PCT_CHANGE ) OVER (PARTITION BY P.ID, YEAR_,MONTH_) AS M_PCT_CHANGE,
    MEDIAN( P.PCT_CHANGE_RANK ) OVER (PARTITION BY P.ID, YEAR_,MONTH_) AS M_PCT_CHANGE_RANK,
 
    MEDIAN( P.NET_FLOW ) OVER (PARTITION BY P.ID, YEAR_,MONTH_) AS M_NET_FLOW,
    MEDIAN( P.NET_FLOW_RANK ) OVER (PARTITION BY P.ID, YEAR_,MONTH_) AS M_NET_FLOW_RANK,
    
    MEDIAN( P.NET_FLOW_NORM ) OVER (PARTITION BY P.ID, YEAR_,MONTH_) AS M_NET_FLOW_NORM,
    MEDIAN( P.NET_FLOW_NORM_RANK ) OVER (PARTITION BY P.ID, YEAR_,MONTH_) AS M_NET_FLOW_NORM_RANK,
    
    MEDIAN( P.GROSS_FLOW ) OVER (PARTITION BY P.ID, YEAR_,MONTH_) AS M_GROSS_FLOW,
    MEDIAN( P.GROSS_FLOW_RANK ) OVER (PARTITION BY P.ID, YEAR_,MONTH_) AS M_GROSS_FLOW_RANK,
    
    MEDIAN( P.MARKET_CAP) OVER (PARTITION BY P.ID, YEAR_,MONTH_) AS M_MCAP,
    MEDIAN( P.MARKET_CAP_RANK) OVER (PARTITION BY P.ID, YEAR_,MONTH_) AS M_MCA_RANK,

    COUNT( P.PCT_CHANGE )  OVER (PARTITION BY P.ID, YEAR_, MONTH_) AS VALUE_COUNT,
    MAX( P.MARKETDATE )  OVER (PARTITION BY P.ID, YEAR_, MONTH_) AS MONTHEND


/*    MEDIAN( P.NET_FLOW_NORM ) OVER (PARTITION BY P.ID) AS M_NET_FLOW_NORM,
    MEDIAN( P.NET_FLOW_NORM_RANK ) OVER (PARTITION BY P.ID) AS M_NET_FLOW_NRANK,
    COUNT( P.PCT_CHANGE )  OVER (PARTITION BY P.ID) AS VALUE_COUNT,
    MAX ( P.MARKETDATE ) OVER () AS MAX_DATE,
    MIN ( P.MARKETDATE ) OVER () AS MIN_DATE, 
    (MAX_DATE::DATE - MIN_DATE::DATE) AS DAY_COUNT */
  --  (VALUE_COUNT / DAY_COUNT) AS DENSITY
FROM SYLVINA.DBO.PRICING_RANKED P
JOIN SYLVINA.DBO.UNIVERSE_INFO I ON I.ID = P.ID
--WHERE MARKETDATE > '2023-01-01' 
QUALIFY VALUE_COUNT > 19
ORDER BY ID, YEAR_ DESC, MONTH_ DESC;


SELECT * FROM SYLVINA.DBO.MONTHLY_METRICS
WHERE ID='MSFT'
ORDER BY MONTHEND ASC;

SELECT * FROM SYLVINA.DBO.PRICING_RANKED P 
WHERE P.ID='MSFT' AND MARKETDATE < '1986-07-30';


 SELECT * FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()));
SELECT * FROM SYLVINA.DBO.T2;
SELECT * FROM SYLVINA.DBO.UNIVERSE_INFO;

SELECT * FROM SYLVINA.DBO.T1 T WHERE T.ID NOT IN (SELECT ID FROM SYLVINA.DBO.UNIVERSE_INFO);
SELECT * FROM SYLVINA.DBO.UNIVERSE_INFO T WHERE T.ID NOT IN (SELECT ID FROM SYLVINA.DBO.T1);


SELECT * FROM SYLVINA.DBO.UNIVERSE LIMIT 100;
SELECT LAST_QUERY_ID();

SELECT * FROM TABLE(RESULT_SCAN('01ad540f-0001-ab37-002a-be87000b30b6'));

SELECT * FROM PERMSECMAPX X 
WHERE X.SECCODE=8156 
AND X.REGCODE=1
AND X.ENTTYPE=55;

SELECT * 
FROM PERMQUOTEREF X WHERE X.QUOTEPERMID=55846088693;