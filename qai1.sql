SELECT * FROM SECMAPX S WHERE S.VENCODE = 46244	;

SELECT D.* FROM SECMSTRX S 
JOIN SECMAPX M ON M.SECCODE = S.SECCODE AND M.VENTYPE = 33
JOIN DS2CTRYQTINFO C ON C.INFOCODE = M.VENCODE
JOIN DS2SECURITY D ON D.DSSECCODE = C.DSSECCODE
WHERE S.ID = 'MSFT';


SELECT * FROM DS2CTRYQTINFO C WHERE C.INFOCODE = 163793;

SELECT * FROM QAI.DBO.DS2SECURITY S WHERE S.DSSECCODE= 17953;

SELECT S.ID, PR.TICKER, PRD.RIC from SECMSTRX S
JOIN PermSecMapX P ON P.SECCODE = S.SECCODE
JOIN PermQuoteRef PR ON PR.QUOTEPERMID = P.ENTPERMID
JOIN PERMRICDATA PRD ON PRD.QUOTEPERMID = PR.QUOTEPERMID
WHERE S.ID = 'MSFT' and PR.ISPRIMARY = TRUE
 -- 55 quote / 49 instrument
;

SELECT * from QAI.DBO.IDXINFO I 
WHERE I.CODE = 178;

SELECT 
MR.ID, MR.NAME, 
MR.COUNTRY,
SMX.SECCODE,
SMX.VENCODE,
PX.RANK,
PR.MIC, PR.TICKER, PR.QUOTEPERMID, PR.ISPRIMARY, PR.EXCHCODE,
PRIC.RIC,
C.REGION,
C.TYPECODE,
C.STATUSCODE,
C.COVERGCODE,
SEC.IBESTICKER, 
SEC.PRIMEXCHMNEM,
SEC.ISOCURRCODE,
SEC.DELISTDATE,
SMX.STARTDATE, SMX.ENDDATE
FROM SECMSTRX MR
JOIN PermSecMapX PX ON PX.SECCODE = MR.SECCODE and PX.ENTTYPE = 55 and PX.REGCODE = 1
JOIN PermQuoteRef PR ON PR.QUOTEPERMID = PX.ENTPERMID AND PR.ISPRIMARY=TRUE AND PX.RANK=(SELECT MIN(RANK) FROM PERMSECMAPX X_ JOIN PermQuoteRef Y_ WHERE Y_.QUOTEPERMID=X_.ENTPERMID AND  Y_.ISPRIMARY=TRUE AND X_.ENTTYPE=55 and X_.REGCODE=1 and X_.SECCODE=MR.SECCODE) 
JOIN PERMRICDATA PRIC ON PRIC.QUOTEPERMID = PR.QUOTEPERMID AND PRIC.STARTDATE = (SELECT MAX(STARTDATE) FROM PERMRICDATA PP WHERE PP.QUOTEPERMID=PR.QUOTEPERMID )
JOIN SECMAPX SMX ON SMX.VENTYPE = 33 AND SMX.SECCODE = MR.SECCODE AND SMX.RANK =1 
JOIN DS2CTRYQTINFO C ON C.INFOCODE = SMX.VENCODE
JOIN DS2SECURITY SEC ON SEC.DSSECCODE = C.DSSECCODE AND SEC.ISOCURRCODE = 'USD'
WHERE   MR.ID  IN (SELECT U.ID FROM SYLVINA.DBO.UNIVERSE U );
 -- 55 quote / 49 instrument
;
CREATE TABLE SYLVINA.DBO.UNIVERSE_NOT AS
SELECT ID FROM SYLVINA.DBO.UNIVERSE where ID NOT IN (SELECT ID FROM SYLVINA.DBO.UNIVERSE_INFO);

SELECT COUNT(*) from SYLVINA.DBO.UNIVERSE;


SELECT * FROM DS2SECURITY WHERE DSSECCODE = 39471;


SElECT ID, NAME, MR.SECCODE, MR.TYPE_, SI.* FROM SECMSTRX MR 
JOIN SECMAPX SM ON MR.SECCODE = SM.SECCODE AND SM.VENTYPE = 33 AND SM.RANK=1
JOIN DS2CTRYQTINFO CI ON CI.INFOCODE = SM.VENCODE AND CI.TYPECODE = 'EQ'
JOIN DS2SECURITY SI ON SI.DSSECCODE = CI.DSSECCODE
WHERE CONTAINS(NAME,'DELL TECH') = TRUE and MR.TYPE_ = 1;


CREATE OR REPLACE PROCEDURE sp_demo_if(p NUMBER, q NUMBER, r NUMBER)
  RETURNS VARCHAR
  LANGUAGE SQL
AS
$$
  DECLARE
    var_string VARCHAR DEFAULT 'Maximum Number: ';
  BEGIN
    IF ( p>=q AND p>=r ) THEN
      RETURN var_string || p ;
    ELSEIF ( q>=p AND q>=r ) THEN
      RETURN var_string || q ;
    ELSE
      RETURN var_string || r ;
    END IF;
  END;
$$;


CREATE OR REPLACE FUNCTION SYLVINA.DBO.status_rank(status varchar)
RETURNS INT
LANGUAGE PYTHON
RUNTIME_VERSION = '3.8'
HANDLER = 'status_rank'
as
$$

def status_rank(status):
      if status == 'AC':
            return 3
      elif status == 'DC':
            return 0
      else:
            return 1

$$;



DROP TABLE SYLVINA.DBO.UNIVERSE_INFO;
DROP TABLE SYLVINA.DBO.UNIVERSE_NOT;
-- LIST QUOTE ID'S FOR A RJQ ID


CREATE or REPLACE TABLE SYLVINA.DBO.UNIVERSE_INFO AS
SELECT SM.ID, SM.NAME, SM.SECCODE, CQI.INFOCODE, SX.STARTDATE AS DS2_STARTDATE, SX.ENDDATE AS DS2_ENDDATE,  CQI.TYPECODE AS TYPECODE_DS, DSS.IBESTICKER, PX.RANK, PRD.RIC, PRD.ENDDATE, PQR.EXCHCODE, PQR.CURRPERMID, PQR.MIC, PQR.QUOTEPERMID, PQR.STATUS 
FROM SECMSTRX SM 
JOIN PERMSECMAPX PX ON PX.SECCODE = SM.SECCODE AND PX.REGCODE=1 AND PX.ENTTYPE=55
JOIN SYLVINA.DBO.PERMQUOTEREFXX PQR ON PQR.QUOTEPERMID = PX.ENTPERMID AND PQR.STATUSVAL = (SELECT MAX(STATUSVAL) FROM SYLVINA.DBO.PERMQUOTEREFXX PX_ WHERE PX_.QUOTEPERMID = PX.ENTPERMID)
JOIN PERMRICDATA PRD ON PRD.QUOTEPERMID = PQR.QUOTEPERMID AND PRD.ENDDATE = ( SELECT MAX(ENDDATE) FROM PERMRICDATA PR_ WHERE PR_.QUOTEPERMID = PRD.QUOTEPERMID)
JOIN SECMAPX SX ON SX.SECCODE = SM.SECCODE AND SX.VENTYPE = 33 AND SX.RANK = 1
JOIN DS2CTRYQTINFO CQI ON CQI.INFOCODE = SX.VENCODE 
JOIN DS2SECURITY DSS ON DSS.DSSECCODE = CQI.DSSECCODE
WHERE SM.ID IN ( SELECT * FROM SYLVINA.DBO.UNIVERSE)
      AND SM.TYPE_ = 1 
      AND ( PX.RANK = (SELECT MIN(RANK) FROM PERMSECMAPX PX_ JOIN SYLVINA.DBO.PERMQUOTEREFXX PQ_ ON PX_.ENTPERMID = PQ_.QUOTEPERMID WHERE PQ_.ISPRIMARY=TRUE AND PX_.SECCODE = SM.SECCODE AND PX_.REGCODE = 1 AND PX_.ENTTYPE = 55)
            AND            
            
                  PQR.ISPRIMARY=TRUE)
      AND CQI.REGION = 'US'  
      AND (CQI.TYPECODE = 'EQ' OR CQI.TYPECODE = 'ADR');


SELECT * FROM SYLVINA.DBO.UNIVERSE_INFO;

-- CRreate list not in universe
WITH NOT_IN AS 
(
      SELECT * FROM SYLVINA.DBO.UNIVERSE WHERE ID NOT IN ( SELECT ID AS IDX FROM SYLVINA.DBO.UNIVERSE_INFO )

)
SELECT SM.ID, SM.NAME, SM.COUNTRY, SM.SECCODE, SX.VENCODE, SX.STARTDATE, SX.ENDDATE, DSS.* FROM SECMSTRX SM 
JOIN SECMAPX SX ON SX.SECCODE = SM.SECCODE and SX.RANK = 1 and SX.VENTYPE = 33 
JOIN DS2CTRYQTINFO DCI ON DCI.INFOCODE = SX.VENTYPE
JOIN DS2SECURITY DSS ON DCI.DSSECCODE = DSS.DSSECCODE
WHERE SM.TYPE_ = 1 
AND SM.ID IN (SELECT * FROM NOT_IN);

SELECT DISTINCT(C.TYPECODE),R.DESC_ FROM DS2CTRYQTINFO C
JOIN DS2XREF R ON C.TYPECODE= R.CODE;


SELECT PRIC.RIC, PR.ISPRIMARY, PR.MIC, PX.RANK FROM PERMSECMAPX PX
JOIN PERMQUOTEREF PR ON PR.QUOTEPERMID = PX.ENTPERMID
JOIN PERMRICDATA PRIC ON PRIC.QUOTEPERMID = PR.QUOTEPERMID
WHERE PX.SECCODE = 11192844 AND PX.ENTTYPE=55 ;


SELECT * FROM PERMQUOTEREF P WHERE P.QUOTEPERMID

SELECT * FROM SECMAPX S WHERE ( S.SECCODE=46692 ) AND S.VENTYPE=33;   -- 86822 - ASML - 86823



SELECT * FROM DS2CTRYQTINFO D WHERE ( D.INFOCODE =  129414 );

SELECT * FROM DS2SECURITY S WHERE S.DSSECCODE = 4516;


SELECT * FROM DS2PRIMQTPRC D WHERE D.INFOCODE = 71048 LIMIT 100;

DROP TABLE SYLVINA.DBO.UNIVERSE;




ALTER  WAREHOUSE FASTERWH SET WAREHOUSE_SIZE=XLARGE;

WITH TOPN AS
(
SELECT     
            MR.ID,
            MR.SECCODE,
            O.INFOCODE
--,           PR.TICKER
,           O.DSQTNAME
,           P.MARKETDATE
--,           E.EXCHCTRYCODE
,           P.CLOSE_ * S.NUMSHRS AS MARKETCAP
,ROW_NUMBER()  OVER (PARTITION BY P.MARKETDATE ORDER BY P.CLOSE_ * S.NUMSHRS DESC ) AS MCAP_RANK
FROM  DS2CTRYQTINFO O
JOIN SECMAPX MP ON MP.VENCODE = O.INFOCODE AND MP.VENTYPE = 33 
JOIN SECMSTRX MR ON MR.SECCODE = MP.SECCODE AND MR.TYPE_ = 1 AND MP.RANK = 1
--JOIN PermSecMapX PX ON PX.SECCODE = MR.SECCODE AND PX.ENTTYPE = 55 AND PX.REGCODE = 1  
--JOIN PermQuoteRef PR ON PR.QUOTEPERMID = PX.ENTPERMID
JOIN DS2SECURITY D ON D.DSSECCODE = O.DSSECCODE AND D.ISOCURRCODE = 'USD'
--JOIN DS2EXCHANGE E ON E.EXCHMNEM = D.PRIMEXCHMNEM 
JOIN  DS2PRIMQTPRC P
      ON    P.INFOCODE = O.INFOCODE
        AND	P.MARKETDATE		IN	(
						SELECT  MAX(P1.MARKETDATE) 
						FROM 	DS2PRIMQTPRC P1
						WHERE  P1.INFOCODE = 39988 AND P1.MARKETDATE >= '1990-01-01'-- Returns the max of Trading dates of IBM Grouped by Year.
						GROUP BY MONTH(P1.MARKETDATE), YEAR(P1.MARKETDATE)
						)
		
JOIN  DS2NUMSHARES S
      ON    S.INFOCODE = O.INFOCODE
      AND   S.EVENTDATE = (SELECT MAX(EVENTDATE) FROM DS2NUMSHARES WHERE 
                  INFOCODE = O.INFOCODE AND EVENTDATE <= P.MARKETDATE)
                  
WHERE O.REGION = 'US'  --U.S Equities
AND (O.TYPECODE ='EQ' OR O.TYPECODE ='ADR')  --Equities
AND  P.MARKETDATE BETWEEN '1990-01-01' AND '2023-12-31' 		
AND P.CLOSE_ > 1 
AND S.NUMSHRS > 1
 )
SELECT * FROM TOPN WHERE MCAP_RANK<=1000  ORDER BY MARKETDATE,MCAP_RANK ASC;
;

SELECT COUNT(*) FROM SYLVINA.DBO.UNIVERSE;


SELECT DISTINCT(MIC) FROM PERMQUOTEREF P;

SELECT * FROM SMACODE S WHERE S.CODETYPE = 4;